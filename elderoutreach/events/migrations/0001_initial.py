# Generated by Django 4.0.7 on 2022-10-18 06:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attending',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CatersOptions',
            fields=[
                ('caters_id', models.AutoField(primary_key=True, serialize=False)),
                ('caters_to', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EventInterests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='EventProviders',
            fields=[
                ('PID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('org_type', models.CharField(choices=[('I', 'Individual'), ('O', 'Organisation')], max_length=1)),
                ('email', models.EmailField(max_length=254)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Interests',
            fields=[
                ('interest_id', models.AutoField(primary_key=True, serialize=False)),
                ('interest', models.CharField(max_length=48)),
            ],
        ),
        migrations.CreateModel(
            name='StateSuburbs',
            fields=[
                ('SSID', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(choices=[('ACT', 'Australian Capital Territory'), ('JBT', 'Jervis Bay Territory'), ('NSW', 'New South Wales'), ('NT', 'Northern Territory'), ('QLD', 'Queensland'), ('SA', 'South Australia'), ('TAS', 'Tasmania'), ('VIC', 'Victoria'), ('WA', 'Western Australia')], max_length=3)),
                ('suburb', models.CharField(max_length=50)),
                ('latit', models.FloatField()),
                ('longit', models.FloatField()),
            ],
            options={
                'unique_together': {('state', 'suburb')},
            },
        ),
        migrations.CreateModel(
            name='TransportProviders',
            fields=[
                ('TID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('booking_link', models.URLField(blank=True, null=True)),
                ('booking_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('min_discount_age', models.IntegerField()),
                ('allow_carers', models.BooleanField()),
                ('require_med_list', models.BooleanField()),
                ('min_days_b4_cancel', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TransportCoverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.transportproviders')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='events.statesuburbs')),
            ],
        ),
        migrations.CreateModel(
            name='ProviderCaters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cater_caters', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cater_caters', to='events.catersoptions')),
                ('cater_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cater_provider', to='events.transportproviders')),
            ],
        ),
        migrations.AddConstraint(
            model_name='interests',
            constraint=models.UniqueConstraint(fields=('interest',), name='unique_interests'),
        ),
        migrations.AddField(
            model_name='events',
            name='PID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events_PID', to='events.eventproviders'),
        ),
        migrations.AddField(
            model_name='events',
            name='SSID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='event_ssid', to='events.statesuburbs'),
        ),
        migrations.AddField(
            model_name='eventproviders',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='event_provider_location', to='events.statesuburbs'),
        ),
        migrations.AddField(
            model_name='eventinterests',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventinterests_event', to='events.events'),
        ),
        migrations.AddField(
            model_name='eventinterests',
            name='interest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventinterests_interest', to='events.interests'),
        ),
        migrations.AddConstraint(
            model_name='catersoptions',
            constraint=models.UniqueConstraint(fields=('caters_to', 'caters_id'), name='catersoptions_key'),
        ),
        migrations.AddField(
            model_name='attending',
            name='attending_event',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='events.events'),
        ),
        migrations.AddField(
            model_name='attending',
            name='attending_user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='transportcoverage',
            unique_together={('TID', 'area')},
        ),
        migrations.AlterUniqueTogether(
            name='providercaters',
            unique_together={('cater_provider', 'cater_caters')},
        ),
        migrations.AddConstraint(
            model_name='eventproviders',
            constraint=models.UniqueConstraint(fields=('name', 'email', 'phone'), name='unique_org'),
        ),
        migrations.AlterUniqueTogether(
            name='eventinterests',
            unique_together={('event', 'interest')},
        ),
        migrations.AlterUniqueTogether(
            name='attending',
            unique_together={('attending_user', 'attending_event')},
        ),
    ]
